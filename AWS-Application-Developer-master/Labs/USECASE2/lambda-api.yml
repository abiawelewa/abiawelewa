AWSTemplateFormatVersion: "2010-09-09"
Description: Rising Minerva CFT for API Gateway, Lambda API and Dynamo DB backend 
Parameters:
  LambdaCodeS3Bucket:
    Default: testdataengineeringabi
    Description: S3 Bucket to Lambda code
    Type: String 
  LambdaCodeS3Key:
    Default: lambda-api/lambda-api.py.zip
    Description: S3 Key to Lambda code
    Type: String

  Environment:
    Default: dev
    Description: 'What environment type is it (prod, qa, dev)?'
    Type: String
    AllowedValues:
      - dev
      - qa
      - prod
      
  RisingMinervaLambdaFnName:
    Type: "String"
    AllowedPattern: "^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$"
    Default: "RisingMinervaServerlessAPI"
    
  ReadCapacityUnits:
     Description: Provisioned read throughput
     Type: Number
     Default: '5'
     MinValue: '5'
     MaxValue: '10000'
     ConstraintDescription: must be between 5 and 10000
     
  WriteCapacityUnits:
     Description: Provisioned write throughput
     Type: Number
     Default: '5'
     MinValue: '5'
     MaxValue: '10000'
     ConstraintDescription: must be between 5 and 10000
     
  CustomersTableName:
     Type: String
     Default: customers    
Mappings:
  IAMRole:
    us-east-1:
      dev: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
      qa: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
      prod: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
    us-west-2:
      dev: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
      qa: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
      prod: arn:aws:iam::104227806992:role/LambdaIAMRoleUseCase2
  LambdaSubnets:
    us-east-1:
      dev:
        - subnet-0d692b01cb674c1cf
        - subnet-071d6ad9458bf9930
        - subnet-07f96ebbfc41fb4aa
        - subnet-022d0c5b044df3fea
        - subnet-00e0f380233928e54
        - subnet-0576e9074b7107ed9
      qa:
        - subnet-0d692b01cb674c1cf
        - subnet-071d6ad9458bf9930
        - subnet-07f96ebbfc41fb4aa
        - subnet-022d0c5b044df3fea
        - subnet-00e0f380233928e54
        - subnet-0576e9074b7107ed9    
      prod:
        - subnet-0d692b01cb674c1cf
        - subnet-071d6ad9458bf9930
        - subnet-07f96ebbfc41fb4aa
        - subnet-022d0c5b044df3fea
        - subnet-00e0f380233928e54
        - subnet-0576e9074b7107ed9     
    us-west-2:
      dev:
        - subnet-0cfcbedd90ee6b60b 
        - subnet-0154d37c1555d9d42 
        - subnet-01b52027f6c2ee4e4
        - subnet-0b905175d8cd7059a
      qa:
        - subnet-0cfcbedd90ee6b60b 
        - subnet-0154d37c1555d9d42 
        - subnet-01b52027f6c2ee4e4
        - subnet-0b905175d8cd7059a
      prod:
        - subnet-0cfcbedd90ee6b60b 
        - subnet-0154d37c1555d9d42 
        - subnet-01b52027f6c2ee4e4
        - subnet-0b905175d8cd7059a       
  LambdaSecurityGroups:
    us-east-1:
      dev:
        - sg-087114a9d7f8a5992
      qa:
        - sg-087114a9d7f8a5992
      prod:
        - sg-087114a9d7f8a5992
    us-west-2:
      dev:
        - sg-09c7864f7d503d486
      qa:
        - sg-09c7864f7d503d486
      prod:
        - sg-09c7864f7d503d486
Resources:
  RisingMinervaAPIGWRESTAPI: # Initialize a REST API
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "RisingMinervaAPI"
      Description: "Rising Minerva API"

  RisingMinervaAPIGWRootMethod: #Delare HTTP METHOD - POST
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "RisingMinervaLambdaFunction.Arn"
      ResourceId: !GetAtt "RisingMinervaAPIGWRESTAPI.RootResourceId"
      RestApiId: !Ref "RisingMinervaAPIGWRESTAPI"

  RisingMinervaAPIGWDeployment: #Deployment stage
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - "RisingMinervaAPIGWRootMethod"
    Properties:
      RestApiId: !Ref "RisingMinervaAPIGWRESTAPI"
      StageName: !Ref "Environment"

  RisingMinervaLambdaFunction: #Create Lambda function
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
          S3Bucket: !Ref LambdaCodeS3Bucket
          S3Key: !Ref LambdaCodeS3Key        
      Description: "Rising Minerva Lambda function for APIGW-DynamoDB demo"
      FunctionName: !Ref "RisingMinervaLambdaFnName"
      Handler: "lambda-api.handler"
      MemorySize: 128
      Role: !FindInMap 
        - IAMRole
        - !Ref 'AWS::Region'
        - !Ref Environment
      VpcConfig:
        SecurityGroupIds: !FindInMap 
          - LambdaSecurityGroups
          - !Ref 'AWS::Region'
          - !Ref Environment
        SubnetIds: !FindInMap 
          - LambdaSubnets
          - !Ref 'AWS::Region'
          - !Ref Environment      
      Runtime: "python3.7"
      Timeout: 10

  RisingMinervaAPIGWLambdaExecutePermission: #EXPLICITLY Give permission to execute Lambda
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "RisingMinervaLambdaFunction.Arn"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RisingMinervaAPIGWRESTAPI}/*/POST/"

  Customers: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "customer_id"
          AttributeType: "N"        
      KeySchema: 
        - 
          AttributeName: "customer_id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref ReadCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits
      TableName: !Ref CustomersTableName
Outputs:
  apiGatewayInvokeURL:
    Value: !Sub "https://${RisingMinervaAPIGWRESTAPI}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"

  lambdaArn:
    Value: !GetAtt "RisingMinervaLambdaFunction.Arn"